# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

networks:
    default:

services:

    orderer0.example.com:
        container_name: orderer0.example.com
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_GENESISPROFILE=SampleSingleMSPSolo
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            - ORDERER_GENERAL_LOCALMSPID=example.com
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            # enabled TLS
            - ORDERER_GENERAL_TLS_ENABLED=false
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
        volumes:
            - ../configs/${CORE_PEER_NETWORKID}:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/ordererOrganizations/example.com/orderers/orderer0.example.com/tls:/var/hyperledger/tls
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'
        networks:
          default:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer0.org1.example.com:
        container_name: peer0.org1.example.com
        image: hyperledger/fabric-peer
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer0.org1.example.com
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
            # Set this peer as an anchor peer in configtx.yaml
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=org1.example.com
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ../configs:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/var/hyperledger/tls
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0.example.com
        links:
            - orderer0.example.com
        command: peer node start
        networks:
          default:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer0.org2.example.com:
        image: hyperledger/fabric-peer
        container_name: peer0.org2.example.com
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer0.org2.example.com
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
            # Set this peer as an anchor peer in configtx.yaml
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=org2.example.com
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ../configs:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls:/var/hyperledger/tls
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0.example.com
            - peer0.org1.example.com
        links:
            - orderer0.example.com
        command: peer node start
        networks:
          default:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer1.org1.example.com:
        image: hyperledger/fabric-peer
        container_name: peer1.org1.example.com
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer1.org1.example.com
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=org1.example.com
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ../configs:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/var/hyperledger/tls
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0.example.com
            - peer0.org1.example.com
        links:
            - orderer0.example.com
        command: peer node start
        networks:
          default:
             aliases:
               - ${CORE_PEER_NETWORKID}

    peer1.org2.example.com:
        image: hyperledger/fabric-peer
        container_name: peer1.org2.example.com
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer1.org2.example.com
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
            - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=org2.example.com
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ../configs:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp:/var/hyperledger/msp
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls:/var/hyperledger/tls
        ports:
            - '7051'
            - '7053'
        depends_on:
            - orderer0.example.com
            - peer0.org2.example.com
        links:
            - orderer0.example.com
        command: peer node start
        networks:
          default:
             aliases:
               - ${CORE_PEER_NETWORKID}

    cli:
        container_name: cli
        image: hyperledger/fabric-tools
        tty: true
        environment:
            - GOPATH=/opt/gopath
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_PEER_TLS_ENABLED=false
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: /bin/bash -c 'sleep 6000000000000000000'
        volumes:
            - /var/run/:/host/var/run/
            - ../../../examples/chaincode:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode
            - ../configs:/var/hyperledger/configs
            - ../configs/${CORE_PEER_NETWORKID}/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls:/var/hyperledger/tls
        depends_on:
          - orderer0.example.com
          - peer0.org1.example.com
          - peer1.org1.example.com
          - peer0.org2.example.com
          - peer1.org2.example.com
        networks:
          default:
             aliases:
               - ${CORE_PEER_NETWORKID}
